// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// fn_Sto
double fn_Sto(double t, arma::vec q, double gamma_all, arma::vec px, arma::vec pw);
RcppExport SEXP _MuSICg_fn_Sto(SEXP tSEXP, SEXP qSEXP, SEXP gamma_allSEXP, SEXP pxSEXP, SEXP pwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_Sto(t, q, gamma_all, px, pw));
    return rcpp_result_gen;
END_RCPP
}
// fn_cfto
double fn_cfto(double t, arma::vec q, double gamma_all, arma::vec px, arma::vec pw);
RcppExport SEXP _MuSICg_fn_cfto(SEXP tSEXP, SEXP qSEXP, SEXP gamma_allSEXP, SEXP pxSEXP, SEXP pwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_cfto(t, q, gamma_all, px, pw));
    return rcpp_result_gen;
END_RCPP
}
// fn_dexpQ
arma::mat fn_dexpQ(int cstat, double t1, double t2, arma::vec q, arma::vec Xi, double gamma_all, int len_par);
RcppExport SEXP _MuSICg_fn_dexpQ(SEXP cstatSEXP, SEXP t1SEXP, SEXP t2SEXP, SEXP qSEXP, SEXP XiSEXP, SEXP gamma_allSEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type cstat(cstatSEXP);
    Rcpp::traits::input_parameter< double >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< double >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_dexpQ(cstat, t1, t2, q, Xi, gamma_all, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fn_dg
arma::vec fn_dg(double t, double gamma_all, int len_par);
RcppExport SEXP _MuSICg_fn_dg(SEXP tSEXP, SEXP gamma_allSEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_dg(t, gamma_all, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fn_dh
arma::vec fn_dh(double t, double gamma_all, int len_par);
RcppExport SEXP _MuSICg_fn_dh(SEXP tSEXP, SEXP gamma_allSEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_dh(t, gamma_all, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fn_egval
arma::vec fn_egval(arma::vec q);
RcppExport SEXP _MuSICg_fn_egval(SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_egval(q));
    return rcpp_result_gen;
END_RCPP
}
// fn_egvec
arma::mat fn_egvec(arma::vec q);
RcppExport SEXP _MuSICg_fn_egvec(SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_egvec(q));
    return rcpp_result_gen;
END_RCPP
}
// fn_expQ
arma::vec fn_expQ(int cstat, double t1, double t2, arma::vec q, double gamma_all);
RcppExport SEXP _MuSICg_fn_expQ(SEXP cstatSEXP, SEXP t1SEXP, SEXP t2SEXP, SEXP qSEXP, SEXP gamma_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type cstat(cstatSEXP);
    Rcpp::traits::input_parameter< double >::type t1(t1SEXP);
    Rcpp::traits::input_parameter< double >::type t2(t2SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_expQ(cstat, t1, t2, q, gamma_all));
    return rcpp_result_gen;
END_RCPP
}
// fn_fto
arma::vec fn_fto(arma::vec t, arma::vec q, double gamma_all, arma::vec px, arma::vec pw);
RcppExport SEXP _MuSICg_fn_fto(SEXP tSEXP, SEXP qSEXP, SEXP gamma_allSEXP, SEXP pxSEXP, SEXP pwSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type t(tSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_fto(t, q, gamma_all, px, pw));
    return rcpp_result_gen;
END_RCPP
}
// fn_g
double fn_g(double t, double gamma_all);
RcppExport SEXP _MuSICg_fn_g(SEXP tSEXP, SEXP gamma_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_g(t, gamma_all));
    return rcpp_result_gen;
END_RCPP
}
// fn_h
double fn_h(double t, double gamma_all);
RcppExport SEXP _MuSICg_fn_h(SEXP tSEXP, SEXP gamma_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_h(t, gamma_all));
    return rcpp_result_gen;
END_RCPP
}
// fun_lik_incident_grad
arma::mat fun_lik_incident_grad(arma::vec uID, arma::vec ID, arma::vec visits, arma::vec states, arma::mat Qe, arma::mat X_ID, arma::vec cen, double gamma_all, int len_par);
RcppExport SEXP _MuSICg_fun_lik_incident_grad(SEXP uIDSEXP, SEXP IDSEXP, SEXP visitsSEXP, SEXP statesSEXP, SEXP QeSEXP, SEXP X_IDSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type uID(uIDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ID(IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type visits(visitsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type states(statesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_ID(X_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fun_lik_incident_grad(uID, ID, visits, states, Qe, X_ID, cen, gamma_all, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fun_lik_incident_grad_i
arma::vec fun_lik_incident_grad_i(arma::vec ids, arma::vec ID, arma::vec visits, arma::vec states, arma::mat Qe, arma::mat X_ID, arma::vec cen, double gamma_all, int len_par);
RcppExport SEXP _MuSICg_fun_lik_incident_grad_i(SEXP idsSEXP, SEXP IDSEXP, SEXP visitsSEXP, SEXP statesSEXP, SEXP QeSEXP, SEXP X_IDSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type ids(idsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ID(IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type visits(visitsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type states(statesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_ID(X_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fun_lik_incident_grad_i(ids, ID, visits, states, Qe, X_ID, cen, gamma_all, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent
double fn_lik_prevalent(arma::vec u_ID, arma::vec v_ID, arma::mat Qe, arma::vec cen, double gamma_all, double eta, double k, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2);
RcppExport SEXP _MuSICg_fn_lik_prevalent(SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP etaSEXP, SEXP kSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent(u_ID, v_ID, Qe, cen, gamma_all, eta, k, px, pw, px21, px22, pw2));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_exp
double fn_lik_prevalent_exp(arma::vec u_ID, arma::vec v_ID, arma::mat Qe, arma::vec cen, double gamma_all, double eta, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2);
RcppExport SEXP _MuSICg_fn_lik_prevalent_exp(SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP etaSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_exp(u_ID, v_ID, Qe, cen, gamma_all, eta, px, pw, px21, px22, pw2));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_grad
arma::mat fn_lik_prevalent_grad(arma::vec u_ID, arma::vec v_ID, arma::mat X_ID, arma::mat Qe, arma::vec cen, double gamma_all, double eta, double k, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2, int len_par);
RcppExport SEXP _MuSICg_fn_lik_prevalent_grad(SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP X_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP etaSEXP, SEXP kSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_ID(X_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_grad(u_ID, v_ID, X_ID, Qe, cen, gamma_all, eta, k, px, pw, px21, px22, pw2, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_grad_i
arma::vec fn_lik_prevalent_grad_i(int id, arma::vec u_ID, arma::vec v_ID, arma::mat X_ID, arma::mat Qe, arma::vec cen, double gamma_all, double eta, double k, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2, int len_par);
RcppExport SEXP _MuSICg_fn_lik_prevalent_grad_i(SEXP idSEXP, SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP X_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP etaSEXP, SEXP kSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_ID(X_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_grad_i(id, u_ID, v_ID, X_ID, Qe, cen, gamma_all, eta, k, px, pw, px21, px22, pw2, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_grad_i_exp
arma::vec fn_lik_prevalent_grad_i_exp(int id, arma::vec u_ID, arma::vec v_ID, arma::mat X_ID, arma::mat Qe, arma::vec cen, double gamma_all, double eta, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2, int len_par);
RcppExport SEXP _MuSICg_fn_lik_prevalent_grad_i_exp(SEXP idSEXP, SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP X_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP etaSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_ID(X_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_grad_i_exp(id, u_ID, v_ID, X_ID, Qe, cen, gamma_all, eta, px, pw, px21, px22, pw2, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_i
double fn_lik_prevalent_i(int id, arma::vec u_ID, arma::vec v_ID, arma::mat Qe, arma::vec cen, double gamma_all, double eta, double k, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2);
RcppExport SEXP _MuSICg_fn_lik_prevalent_i(SEXP idSEXP, SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP etaSEXP, SEXP kSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< double >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_i(id, u_ID, v_ID, Qe, cen, gamma_all, eta, k, px, pw, px21, px22, pw2));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_i_exp
double fn_lik_prevalent_i_exp(int id, arma::vec u_ID, arma::vec v_ID, arma::mat Qe, arma::vec cen, double gamma_all, double eta, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2);
RcppExport SEXP _MuSICg_fn_lik_prevalent_i_exp(SEXP idSEXP, SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP etaSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_i_exp(id, u_ID, v_ID, Qe, cen, gamma_all, eta, px, pw, px21, px22, pw2));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_i_length
double fn_lik_prevalent_i_length(int id, arma::vec u_ID, arma::vec v_ID, arma::mat Qe, arma::vec cen, double gamma_all, double tau, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2);
RcppExport SEXP _MuSICg_fn_lik_prevalent_i_length(SEXP idSEXP, SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP tauSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type id(idSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_i_length(id, u_ID, v_ID, Qe, cen, gamma_all, tau, px, pw, px21, px22, pw2));
    return rcpp_result_gen;
END_RCPP
}
// fn_lik_prevalent_length
double fn_lik_prevalent_length(arma::vec u_ID, arma::vec v_ID, arma::mat Qe, arma::vec cen, double gamma_all, double tau, arma::vec px, arma::vec pw, arma::vec px21, arma::vec px22, arma::vec pw2);
RcppExport SEXP _MuSICg_fn_lik_prevalent_length(SEXP u_IDSEXP, SEXP v_IDSEXP, SEXP QeSEXP, SEXP cenSEXP, SEXP gamma_allSEXP, SEXP tauSEXP, SEXP pxSEXP, SEXP pwSEXP, SEXP px21SEXP, SEXP px22SEXP, SEXP pw2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type u_ID(u_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type v_ID(v_IDSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px(pxSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw(pwSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px21(px21SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type px22(px22SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type pw2(pw2SEXP);
    rcpp_result_gen = Rcpp::wrap(fn_lik_prevalent_length(u_ID, v_ID, Qe, cen, gamma_all, tau, px, pw, px21, px22, pw2));
    return rcpp_result_gen;
END_RCPP
}
// fn_sumxtx
NumericVector fn_sumxtx(NumericMatrix x);
RcppExport SEXP _MuSICg_fn_sumxtx(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(fn_sumxtx(x));
    return rcpp_result_gen;
END_RCPP
}
// fun_dQ
arma::mat fun_dQ(arma::vec q, arma::vec xi, double gamma_all, int len_par);
RcppExport SEXP _MuSICg_fun_dQ(SEXP qSEXP, SEXP xiSEXP, SEXP gamma_allSEXP, SEXP len_parSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type q(qSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    Rcpp::traits::input_parameter< int >::type len_par(len_parSEXP);
    rcpp_result_gen = Rcpp::wrap(fun_dQ(q, xi, gamma_all, len_par));
    return rcpp_result_gen;
END_RCPP
}
// fun_lik_incident
double fun_lik_incident(arma::vec uID, arma::vec ID, arma::vec visits, arma::vec states, arma::mat Qe, arma::mat X_ID, arma::vec cen, double gamma_all);
RcppExport SEXP _MuSICg_fun_lik_incident(SEXP uIDSEXP, SEXP IDSEXP, SEXP visitsSEXP, SEXP statesSEXP, SEXP QeSEXP, SEXP X_IDSEXP, SEXP cenSEXP, SEXP gamma_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type uID(uIDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ID(IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type visits(visitsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type states(statesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_ID(X_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    rcpp_result_gen = Rcpp::wrap(fun_lik_incident(uID, ID, visits, states, Qe, X_ID, cen, gamma_all));
    return rcpp_result_gen;
END_RCPP
}
// fun_lik_incident_i
double fun_lik_incident_i(arma::vec ids, arma::vec ID, arma::vec visits, arma::vec states, arma::mat Qe, arma::mat X_ID, arma::vec cen, double gamma_all);
RcppExport SEXP _MuSICg_fun_lik_incident_i(SEXP idsSEXP, SEXP IDSEXP, SEXP visitsSEXP, SEXP statesSEXP, SEXP QeSEXP, SEXP X_IDSEXP, SEXP cenSEXP, SEXP gamma_allSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type ids(idsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type ID(IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type visits(visitsSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type states(statesSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Qe(QeSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X_ID(X_IDSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type cen(cenSEXP);
    Rcpp::traits::input_parameter< double >::type gamma_all(gamma_allSEXP);
    rcpp_result_gen = Rcpp::wrap(fun_lik_incident_i(ids, ID, visits, states, Qe, X_ID, cen, gamma_all));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_MuSICg_fn_Sto", (DL_FUNC) &_MuSICg_fn_Sto, 5},
    {"_MuSICg_fn_cfto", (DL_FUNC) &_MuSICg_fn_cfto, 5},
    {"_MuSICg_fn_dexpQ", (DL_FUNC) &_MuSICg_fn_dexpQ, 7},
    {"_MuSICg_fn_dg", (DL_FUNC) &_MuSICg_fn_dg, 3},
    {"_MuSICg_fn_dh", (DL_FUNC) &_MuSICg_fn_dh, 3},
    {"_MuSICg_fn_egval", (DL_FUNC) &_MuSICg_fn_egval, 1},
    {"_MuSICg_fn_egvec", (DL_FUNC) &_MuSICg_fn_egvec, 1},
    {"_MuSICg_fn_expQ", (DL_FUNC) &_MuSICg_fn_expQ, 5},
    {"_MuSICg_fn_fto", (DL_FUNC) &_MuSICg_fn_fto, 5},
    {"_MuSICg_fn_g", (DL_FUNC) &_MuSICg_fn_g, 2},
    {"_MuSICg_fn_h", (DL_FUNC) &_MuSICg_fn_h, 2},
    {"_MuSICg_fun_lik_incident_grad", (DL_FUNC) &_MuSICg_fun_lik_incident_grad, 9},
    {"_MuSICg_fun_lik_incident_grad_i", (DL_FUNC) &_MuSICg_fun_lik_incident_grad_i, 9},
    {"_MuSICg_fn_lik_prevalent", (DL_FUNC) &_MuSICg_fn_lik_prevalent, 12},
    {"_MuSICg_fn_lik_prevalent_exp", (DL_FUNC) &_MuSICg_fn_lik_prevalent_exp, 11},
    {"_MuSICg_fn_lik_prevalent_grad", (DL_FUNC) &_MuSICg_fn_lik_prevalent_grad, 14},
    {"_MuSICg_fn_lik_prevalent_grad_i", (DL_FUNC) &_MuSICg_fn_lik_prevalent_grad_i, 15},
    {"_MuSICg_fn_lik_prevalent_grad_i_exp", (DL_FUNC) &_MuSICg_fn_lik_prevalent_grad_i_exp, 14},
    {"_MuSICg_fn_lik_prevalent_i", (DL_FUNC) &_MuSICg_fn_lik_prevalent_i, 13},
    {"_MuSICg_fn_lik_prevalent_i_exp", (DL_FUNC) &_MuSICg_fn_lik_prevalent_i_exp, 12},
    {"_MuSICg_fn_lik_prevalent_i_length", (DL_FUNC) &_MuSICg_fn_lik_prevalent_i_length, 12},
    {"_MuSICg_fn_lik_prevalent_length", (DL_FUNC) &_MuSICg_fn_lik_prevalent_length, 11},
    {"_MuSICg_fn_sumxtx", (DL_FUNC) &_MuSICg_fn_sumxtx, 1},
    {"_MuSICg_fun_dQ", (DL_FUNC) &_MuSICg_fun_dQ, 4},
    {"_MuSICg_fun_lik_incident", (DL_FUNC) &_MuSICg_fun_lik_incident, 8},
    {"_MuSICg_fun_lik_incident_i", (DL_FUNC) &_MuSICg_fun_lik_incident_i, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_MuSICg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
